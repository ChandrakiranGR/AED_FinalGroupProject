/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.BloodBankRole;

import Business.BloodBank.BloodBank;
import Business.BloodBank.BloodBankDirectory;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author antaradeshmukh
 */
public class ManageBloodBanksPanel extends javax.swing.JPanel {

    private BloodBankDirectory bloodBankDirectory;
    private JTable table;
    private DefaultTableModel tableModel;
    JPanel userProcessContainer ;
    /**
     * Creates new form ManageBloodBanksPanel
     */
    public ManageBloodBanksPanel(JPanel userProcessContainer, BloodBankDirectory bloodBankDirectory) {
    this.userProcessContainer = userProcessContainer;
    this.bloodBankDirectory = bloodBankDirectory;

    
    
    // Initialize BloodBankDirectory
BloodBankDirectory californiaBloodBankDirectory = new BloodBankDirectory();

// Add some dummy blood banks
BloodBank californiaBloodBank1 = californiaBloodBankDirectory.addBloodBank(
    "California Blood Bank 1", 
    "Los Angeles", 
    "A+", 
    100, 
    "123-456-7890", 
    "admin1",  // Username for admin
    "adminpass123"  // Password for admin
);

BloodBank californiaBloodBank2 = californiaBloodBankDirectory.addBloodBank(
    "California Blood Bank 2", 
    "San Francisco", 
    "B-", 
    150, 
    "987-654-3210", 
    "admin2",  
    "adminpass456" 
);

// Call populateTable() to refresh the table with the added blood banks
DefaultTableModel model = (DefaultTableModel) tblBloodBank.getModel();
    model.setRowCount(0);  // Clear existing rows
    
    for (BloodBank bloodBank : bloodBankDirectory.getBloodBankList()) {
        model.addRow(new Object[]{
            bloodBank.getName(),
            bloodBank.getLocation(),
            bloodBank.getBloodType(),
            bloodBank.getAvailableUnits(),
            bloodBank.getContactInfo()
        });
    }

    initComponents();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblBloodBank = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tblBloodBank.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Location", "Blood Type", "Available Units", "Contact Info"
            }
        ));
        jScrollPane1.setViewportView(tblBloodBank);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setText("update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Manage Blood Bank");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deleteButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addButton)
                                    .addComponent(updateButton)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jLabel1)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteButton)
                        .addGap(58, 58, 58))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            BloodBank bloodBank = bloodBankDirectory.getBloodBankList().get(selectedRow);
            AddBloodBankPanel updatePanel = new AddBloodBankPanel(userProcessContainer, bloodBankDirectory, this, bloodBank);
            JFrame frame = new JFrame("Update Blood Bank");
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame.add(updatePanel);
            frame.pack();
            frame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a blood bank to update.");
        }
        
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        AddBloodBankPanel addPanel = new AddBloodBankPanel(userProcessContainer, bloodBankDirectory);
        JFrame frame = new JFrame("Add Blood Bank");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.add(addPanel);
        frame.pack();
        frame.setVisible(true);
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            BloodBank bloodBank = bloodBankDirectory.getBloodBankList().get(selectedRow);
            bloodBankDirectory.removeBloodBank(bloodBank);
            populateTable();
        } else {
            JOptionPane.showMessageDialog(this, "Please select a blood bank to delete.");
        }
    
    }//GEN-LAST:event_deleteButtonActionPerformed

  void populateTable() {
    // Clear existing rows in the table model
   // Assuming tblBloodBank is your JTable, and model is the DefaultTableModel
DefaultTableModel model = (DefaultTableModel) tblBloodBank.getModel();

// Clear any existing rows
model.setRowCount(0);  

// Loop through all blood banks and add them to the table
for (BloodBank bloodBank : bloodBankDirectory.getBloodBankList()) {
    model.addRow(new Object[]{
        bloodBank.getName(),
        bloodBank.getLocation(),
        bloodBank.getBloodType(),
        bloodBank.getAvailableUnits(),
        bloodBank.getContactInfo()
    });
}

}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBloodBank;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
